URL da solicitação
https://apiloyalfood.towersfy.com/api/dashboard/month-summary?startDate=2025-10-01&endDate=2025-10-31
Método da solicitação
GET
Código de status
500 Internal Server Error
{
    "status": "error",
    "code": "HTTP_500",
    "message": "column Resposta.clientId does not exist",
    "details": "Error\n    at Query.run (/usr/src/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)\n    at /usr/src/app/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async PostgresQueryInterface.select (/usr/src/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)\n    at async Resposta.findAll (/usr/src/app/node_modules/sequelize/lib/model.js:1140:21)\n    at async Object.getMonthSummary (/usr/src/app/src/repositories/dashboardRepository.js:863:30)\n    at async /usr/src/app/src/controllers/dashboardController.js:111:25"
}
{
    "message": "Request failed with status code 500",
    "name": "AxiosError",
    "stack": "AxiosError: Request failed with status code 500\n    at Oe (https://loyalfood.towersfy.com/static/js/main.822cd291.js:2:306218)\n    at XMLHttpRequest.g (https://loyalfood.towersfy.com/static/js/main.822cd291.js:2:310808)\n    at xt.request (https://loyalfood.towersfy.com/static/js/main.822cd291.js:2:322336)\n    at async Object.getMonthSummary (https://loyalfood.towersfy.com/static/js/2041.d2fa191d.chunk.js:1:4783)\n    at async https://loyalfood.towersfy.com/static/js/2041.d2fa191d.chunk.js:1:936",
    "config": {
        "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
        },
        "adapter": [
            "xhr",
            "http",
            "fetch"
        ],
        "transformRequest": [
            null
        ],
        "transformResponse": [
            null
        ],
        "timeout": 0,
        "xsrfCookieName": "XSRF-TOKEN",
        "xsrfHeaderName": "X-XSRF-TOKEN",
        "maxContentLength": -1,
        "maxBodyLength": -1,
        "env": {},
        "headers": {
            "Accept": "application/json, text/plain, */*",
            "Authorization": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJiZmU2YzZmMy1iYzEzLTQ0YjctYTc5Ni1kN2IzY2UyMzUzZTUiLCJ0ZW5hbnRJZCI6IjNiZDViNDlhLTU2ZTYtNDViNy05NzEwLThkNTFiOGY2ZThkZCIsInJvbGUiOiJBZG1pbiIsIm5hbWUiOiJMdWNhcyIsInByb2ZpbGVQaWN0dXJlVXJsIjpudWxsLCJ0ZW5hbnROYW1lIjoiUm9tYSBQaXp6YXJpYSAmIENob3BwZXJpYWFhIiwiaWF0IjoxNzYxMDkzNzY2LCJleHAiOjE3NjE2OTg1NjZ9.gI5klp_LwKmUWATrw-1240vcVez2IaV08JgbYikPKV4"
        },
        "baseURL": "https://apiloyalfood.towersfy.com/api",
        "params": {
            "startDate": "2025-10-01",
            "endDate": "2025-10-31"
        },
        "method": "get",
        "url": "/dashboard/month-summary",
        "allowAbsoluteUrls": true
    },
    "code": "ERR_BAD_RESPONSE",
    "status": 500
}
    position: '75',
    internalPosition: undefined,
    internalQuery: undefined,
    where: undefined,
    schema: undefined,
    table: undefined,
    column: undefined,
    dataType: undefined,
    constraint: undefined,
    file: 'parse_relation.c',
    line: '3647',
    routine: 'errorMissingColumn',
    sql: `SELECT "Resposta"."id", "Resposta"."ratingValue", "Resposta"."createdAt", "Resposta"."clientId", "pergunta"."id" AS "pergunta.id", "pergunta"."type" AS "pergunta.type" FROM "respostas" AS "Resposta" INNER JOIN "perguntas" AS "pergunta" ON "Resposta"."perguntaId" = "pergunta"."id" AND "pergunta"."type" = 'rating_0_10' WHERE "Resposta"."tenantId" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd' AND "Resposta"."ratingValue" IS NOT NULL ORDER BY "Resposta"."createdAt" ASC;`,
    parameters: undefined
  },
  sql: `SELECT "Resposta"."id", "Resposta"."ratingValue", "Resposta"."createdAt", "Resposta"."clientId", "pergunta"."id" AS "pergunta.id", "pergunta"."type" AS "pergunta.type" FROM "respostas" AS "Resposta" INNER JOIN "perguntas" AS "pergunta" ON "Resposta"."perguntaId" = "pergunta"."id" AND "pergunta"."type" = 'rating_0_10' WHERE "Resposta"."tenantId" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd' AND "Resposta"."ratingValue" IS NOT NULL ORDER BY "Resposta"."createdAt" ASC;`,
  parameters: {}
}
[Auth Middleware] Request: POST /api/auth/verify-token
Executing (default): SELECT "id", "name", "address", "phone", "email", "logoUrl", "primaryColor", "secondaryColor", "description", "website", "cnpj", "inscricaoEstadual", "reportPhoneNumber", "createdAt", "updatedAt" FROM "tenants" AS "Tenant" WHERE "Tenant"."id" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd';
[Auth Middleware] Request: GET /api/dashboard/month-summary?startDate=2025-10-01&endDate=2025-10-31
Executing (default): SELECT "id", "name", "address", "phone", "email", "logoUrl", "primaryColor", "secondaryColor", "description", "website", "cnpj", "inscricaoEstadual", "reportPhoneNumber", "createdAt", "updatedAt" FROM "tenants" AS "Tenant" WHERE "Tenant"."id" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd';
Executing (default): SELECT "id", "name", "description", "isSystemRole", "createdAt", "updatedAt" FROM "roles" AS "Role" WHERE "Role"."name" = 'Admin';
[Authorize Debug] User Role: Admin, Required: dashboard:read
[Authorize Debug] Role ID: ce609d07-d83f-4002-a892-e17c91b767d3, Module: dashboard, Action: read
Executing (default): SELECT "RolePermissao"."roleId", "RolePermissao"."permissaoId", "RolePermissao"."createdAt", "RolePermissao"."updatedAt", "permissao"."id" AS "permissao.id", "permissao"."module" AS "permissao.module", "permissao"."action" AS "permissao.action", "permissao"."description" AS "permissao.description", "permissao"."createdAt" AS "permissao.createdAt", "permissao"."updatedAt" AS "permissao.updatedAt" FROM "role_permissoes" AS "RolePermissao" INNER JOIN "permissoes" AS "permissao" ON "RolePermissao"."permissaoId" = "permissao"."id" AND "permissao"."module" = 'dashboard' AND "permissao"."action" = 'read' WHERE "RolePermissao"."roleId" = 'ce609d07-d83f-4002-a892-e17c91b767d3';
[Authorize Debug] Has Permission Result: true
Executing (default): SELECT "Resposta"."id", "Resposta"."ratingValue", "Resposta"."createdAt", "Resposta"."clientId", "pergunta"."id" AS "pergunta.id", "pergunta"."type" AS "pergunta.type" FROM "respostas" AS "Resposta" INNER JOIN "perguntas" AS "pergunta" ON "Resposta"."perguntaId" = "pergunta"."id" AND "pergunta"."type" = 'rating_0_10' WHERE "Resposta"."tenantId" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd' AND "Resposta"."ratingValue" IS NOT NULL ORDER BY "Resposta"."createdAt" ASC;
Error
    at Query.run (/usr/src/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /usr/src/app/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.select (/usr/src/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async Resposta.findAll (/usr/src/app/node_modules/sequelize/lib/model.js:1140:21)
    at async Object.getMonthSummary (/usr/src/app/src/repositories/dashboardRepository.js:863:30)
    at async /usr/src/app/src/controllers/dashboardController.js:111:25 {
  name: 'SequelizeDatabaseError',
  parent: error: column Resposta.clientId does not exist
      at Parser.parseErrorMessage (/usr/src/app/node_modules/pg-protocol/dist/parser.js:285:98)
      at Parser.handlePacket (/usr/src/app/node_modules/pg-protocol/dist/parser.js:122:29)
      at Parser.parse (/usr/src/app/node_modules/pg-protocol/dist/parser.js:35:38)
      at Socket.<anonymous> (/usr/src/app/node_modules/pg-protocol/dist/index.js:11:42)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10)
      at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
    length: 115,
    severity: 'ERROR',
    code: '42703',
    detail: undefined,
    hint: undefined,
    position: '75',
    internalPosition: undefined,
    internalQuery: undefined,
    where: undefined,
    schema: undefined,
    table: undefined,
    column: undefined,
    dataType: undefined,
    constraint: undefined,
    file: 'parse_relation.c',
    line: '3647',
    routine: 'errorMissingColumn',
    sql: `SELECT "Resposta"."id", "Resposta"."ratingValue", "Resposta"."createdAt", "Resposta"."clientId", "pergunta"."id" AS "pergunta.id", "pergunta"."type" AS "pergunta.type" FROM "respostas" AS "Resposta" INNER JOIN "perguntas" AS "pergunta" ON "Resposta"."perguntaId" = "pergunta"."id" AND "pergunta"."type" = 'rating_0_10' WHERE "Resposta"."tenantId" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd' AND "Resposta"."ratingValue" IS NOT NULL ORDER BY "Resposta"."createdAt" ASC;`,
    parameters: undefined
  },
  original: error: column Resposta.clientId does not exist
      at Parser.parseErrorMessage (/usr/src/app/node_modules/pg-protocol/dist/parser.js:285:98)
      at Parser.handlePacket (/usr/src/app/node_modules/pg-protocol/dist/parser.js:122:29)
      at Parser.parse (/usr/src/app/node_modules/pg-protocol/dist/parser.js:35:38)
      at Socket.<anonymous> (/usr/src/app/node_modules/pg-protocol/dist/index.js:11:42)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10)
      at TCP.onStreamRead (node:internal/stream_base_commons:190:23) {
    length: 115,
    severity: 'ERROR',
    code: '42703',
    detail: undefined,
    hint: undefined,
    position: '75',
    internalPosition: undefined,
    internalQuery: undefined,
    where: undefined,
    schema: undefined,
    table: undefined,
    column: undefined,
    dataType: undefined,
    constraint: undefined,
    file: 'parse_relation.c',
    line: '3647',
    routine: 'errorMissingColumn',
    sql: `SELECT "Resposta"."id", "Resposta"."ratingValue", "Resposta"."createdAt", "Resposta"."clientId", "pergunta"."id" AS "pergunta.id", "pergunta"."type" AS "pergunta.type" FROM "respostas" AS "Resposta" INNER JOIN "perguntas" AS "pergunta" ON "Resposta"."perguntaId" = "pergunta"."id" AND "pergunta"."type" = 'rating_0_10' WHERE "Resposta"."tenantId" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd' AND "Resposta"."ratingValue" IS NOT NULL ORDER BY "Resposta"."createdAt" ASC;`,
    parameters: undefined
  },
  sql: `SELECT "Resposta"."id", "Resposta"."ratingValue", "Resposta"."createdAt", "Resposta"."clientId", "pergunta"."id" AS "pergunta.id", "pergunta"."type" AS "pergunta.type" FROM "respostas" AS "Resposta" INNER JOIN "perguntas" AS "pergunta" ON "Resposta"."perguntaId" = "pergunta"."id" AND "pergunta"."type" = 'rating_0_10' WHERE "Resposta"."tenantId" = '3bd5b49a-56e6-45b7-9710-8d51b8f6e8dd' AND "Resposta"."ratingValue" IS NOT NULL ORDER BY "Resposta"."createdAt" ASC;`,
  parameters: {}
}