const axios = require('axios');
const dotenv = require('dotenv');

dotenv.config();

const { SYSTEM_WHATSAPP_URL, SYSTEM_WHATSAPP_API_KEY, SYSTEM_WHATSAPP_INSTANCE } = process.env;

const sendSystemMessage = async (number, message) => {
  if (!SYSTEM_WHATSAPP_URL || !SYSTEM_WHATSAPP_API_KEY || !SYSTEM_WHATSAPP_INSTANCE) {
    console.error('Vari치veis de ambiente do WhatsApp do sistema n칚o configuradas.');
    // Em um cen치rio real, voc칡 poderia lan칞ar um erro ou usar um sistema de notifica칞칚o de falhas.
    return;
  }

  try {
    const response = await axios.post(`${SYSTEM_WHATSAPP_URL}/message/send`, {
      number: number,
      message: message,
      instance: SYSTEM_WHATSAPP_INSTANCE,
    }, {
      headers: {
        'Content-Type': 'application/json',
        'apikey': SYSTEM_WHATSAPP_API_KEY,
      },
    });

    console.log(`Mensagem enviada para ${number}:`, response.data);
    return response.data;
  } catch (error) {
    console.error(`Falha ao enviar mensagem para ${number}:`, error.response ? error.response.data : error.message);
    // Lan칞ar o erro permite que o chamador (ex: o job) saiba que o envio falhou.
    throw error;
  }
};

const sendInstanteDetractorMessage = async (tenant, detractorResponse) => {
    if (!tenant.reportPhoneNumber) {
        return; // N칚o faz nada se o tenant n칚o tiver um n칰mero para relat칩rios
    }

    const message = `
*Alerta de Detrator!* 游땨

Um cliente deu uma nota baixa em uma de suas pesquisas.

- *Pesquisa:* ${detractorResponse.pesquisa.title}
- *Nota:* ${detractorResponse.ratingValue}
- *Coment치rio:* ${detractorResponse.textValue || 'Nenhum coment치rio.'}

_Recomendamos entrar em contato com o cliente o mais r치pido poss칤vel._
    `.trim();

    await sendSystemMessage(tenant.reportPhoneNumber, message);
};


module.exports = {
  sendSystemMessage,
  sendInstanteDetractorMessage,
};